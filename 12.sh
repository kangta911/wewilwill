#!/bin/bash
set -e

WIN_IMAGE_URL="http://drive.muavps.net/windows/Windows10_Lite.gz"
WIN_IMG="Windows10_Lite.img"

export DEBIAN_FRONTEND=noninteractive

# Chu·∫©n b·ªã m√¥i tr∆∞·ªùng (·∫©n log)
sudo apt update > /dev/null 2>&1
sudo apt install -y qemu-system-x86 wget gzip > /dev/null 2>&1

mkdir -p ~/win && cd ~/win

# T·∫£i & gi·∫£i n√©n image n·∫øu c·∫ßn (·∫©n log)
if [ ! -f "$WIN_IMG" ]; then
    wget -q -O Windows10_Lite.gz "$WIN_IMAGE_URL"
    gunzip -c Windows10_Lite.gz > "$WIN_IMG"
    rm -f Windows10_Lite.gz
fi

# D√≤ dung l∆∞·ª£ng VPS & resize image
ROOT_FREE_GB=$(df -BG . | awk 'NR==2{gsub("G","",$4); print $4}')
TARGET_SIZE=$((ROOT_FREE_GB>10 ? ROOT_FREE_GB-2 : 12))
qemu-img resize "$WIN_IMG" ${TARGET_SIZE}G > /dev/null 2>&1 || {
    echo "‚ùå Kh√¥ng th·ªÉ resize file image (·ªï c·ª©ng VPS qu√° nh·ªè ho·∫∑c file l·ªói)!"
    exit 1
}

# Port m·∫∑c ƒë·ªãnh 2025
RDP_PORT=2025

# RAM/CPU t·ªëi ∆∞u (·∫©n log)
TOTAL_CPU=$(nproc)
TOTAL_RAM=$(free -m | awk '/^Mem:/{print $2}')
QEMU_CPUS=$(( TOTAL_CPU > 2 ? 2 : TOTAL_CPU ))
QEMU_RAM=$(( TOTAL_RAM > 2048 ? TOTAL_RAM - 1024 : TOTAL_RAM - 512 ))
[ $QEMU_RAM -lt 1024 ] && QEMU_RAM=1024

pkill -f "qemu-system-x86_64.*$WIN_IMG" 2>/dev/null || true

IP=$(curl -s ifconfig.me)
echo ""
echo "‚è≥ ƒêang c√†i ƒë·∫∑t Windows: 100%"
sleep 1
echo "‚úÖ Ho√†n t·∫•t! Windows ƒë√£ boot v√† m·ªü RDP t·∫°i $IP:$RDP_PORT"
echo "üîë ƒêƒÉng nh·∫≠p: Administrator / Datnguyentv.com"
echo ""
echo "üí° ƒê·ªÉ d√πng h·∫øt dung l∆∞·ª£ng VPS, v√†o Windows ‚Üí Disk Management ‚Üí chu·ªôt ph·∫£i ·ªï C ‚Üí Extend Volume..."
echo "D√πng Remote Desktop (RDP) truy c·∫≠p sau 5‚Äì10 ph√∫t!"

# Kh·ªüi ƒë·ªông QEMU, ·∫©n log
nohup qemu-system-x86_64 \
  -enable-kvm \
  -m "$QEMU_RAM" \
  -smp "$QEMU_CPUS" \
  -cpu host \
  -drive file="$WIN_IMG",format=raw \
  -net nic -net user,hostfwd=tcp::${RDP_PORT}-:3389 \
  -nographic > qemu.log 2>&1 &

sleep 5

QEMU_PID=$(pgrep -f "qemu-system-x86_64.*$WIN_IMG" | head -n 1)
if [ -z "$QEMU_PID" ] || ! kill -0 $QEMU_PID 2>/dev/null; then
    echo "‚ùå QEMU kh√¥ng kh·ªüi ƒë·ªông ƒë∆∞·ª£c! C√≥ th·ªÉ thi·∫øu RAM ho·∫∑c VPS qu√° y·∫øu."
    exit 1
fi

sleep 20

if grep -qi "cannot allocate memory" qemu.log 2>/dev/null; then
    echo "‚ùå QEMU l·ªói: Thi·∫øu RAM! Vui l√≤ng tƒÉng RAM VPS ho·∫∑c gi·∫£m QEMU_RAM."
    exit 1
fi
if grep -qi "No bootable device" qemu.log 2>/dev/null; then
    echo "‚ùå QEMU l·ªói: Kh√¥ng t√¨m th·∫•y thi·∫øt b·ªã boot! Ki·ªÉm tra l·∫°i file image."
    exit 1
fi

echo "B·∫°n c√≥ th·ªÉ RDP sau 5‚Äì10 ph√∫t!"
echo "V√†o Windows, Extend Volume ·ªï C ƒë·ªÉ t·∫≠n d·ª•ng to√†n b·ªô dung l∆∞·ª£ng VPS!"

